{
  "openapi": "3.0.3",
  "info": {
    "title": "Ringo",
    "description": "Ringo API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://127.0.0.1/api"
    }
  ],
  "tags": [
    {
      "name": "room",
      "description": "Paths that relate directly to the room."
    },
    {
      "name": "player",
      "description": "Paths that relate directly to the player."
    },
    {
      "name": "game",
      "description": "Paths that relate to the running game."
    },
    {
      "name": "unauthorized",
      "description": "Paths that are accessible without authorization."
    },
    {
      "name": "authorized",
      "description": "Paths that are only accessible with authorization."
    },
    {
      "name": "websocket",
      "description": "Paths that initiate a socket."
    }
  ],
  "paths": {
    "/room": {
      "get": {
        "description": "Get Information about the players in a room.",
        "tags": [
          "room",
          "authorized"
        ],
        "security": [
          {
            "UserAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer"
                    },
                    "settings": {
                      "$ref": "#/components/schemas/RoomSettings"
                    },
                    "players": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Player"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 401,
                  "description": "Not authenticated."
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create a new room",
        "tags": [
          "room",
          "unauthorized"
        ],
        "security": [
          {}
        ],
        "parameters": [
          {
            "name": "username",
            "description": "The username to use.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "example": "ExampleUser123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully entered a room",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "503": {
            "description": "No available room code.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 503,
                  "description": "No available room code."
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Change the rooms settings.",
        "tags": [
          "room",
          "authorized"
        ],
        "security": [
          {
            "UserAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Changes where applied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 200,
                  "description": "Changes where applied."
                }
              }
            }
          },
          "401": {
            "description": "User is not host.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 401,
                  "description": "User is not host."
                }
              }
            }
          },
          "406": {
            "description": "Invalid settings.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 406,
                  "description": "Invalid settings."
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Enter a game room.",
        "tags": [
          "room",
          "unauthorized"
        ],
        "security": [
          {}
        ],
        "parameters": [
          {
            "name": "code",
            "description": "The code of the room to enter.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "integer",
              "example": 123456
            }
          },
          {
            "name": "username",
            "description": "The username to use.",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string",
              "example": "ExampleUser123"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully entered a room.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "403": {
            "description": "Room is currently full.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 403,
                  "description": "Room is currently full."
                }
              }
            }
          },
          "404": {
            "description": "Room was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 404,
                  "description": "Room was not found."
                }
              }
            }
          },
          "409": {
            "description": "Username already taken.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 409,
                  "description": "Username already taken."
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Leave the room.",
        "tags": [
          "room",
          "authorized"
        ],
        "security": [
          {
            "UserAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully left room.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 200,
                  "description": "Successfully left room."
                }
              }
            }
          },
          "401": {
            "description": "No user found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 401,
                  "description": "No user was found."
                }
              }
            }
          }
        }
      }
    },
    "/player": {
      "get": {
        "description": "Get information about a player.",
        "tags": [
          "player",
          "authorized"
        ],
        "security": [
          {
            "UserAuth": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "description": "The player in question.",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 401,
                  "description": "Not authenticated."
                }
              }
            }
          },
          "404": {
            "description": "User not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 404,
                  "description": "User not found."
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update information about a player.",
        "tags": [
          "player",
          "authorized"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The cosmetic to cycle",
            "in": "path",
            "schema": {
              "type": "string",
              "enum": [
                "up",
                "down"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated cosmetic slot.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Player"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 401,
                  "description": "Not authenticated."
                }
              }
            }
          }
        }
      }
    },
    "/game": {
      "get": {
        "description": "Get the players board.",
        "tags": [
          "game",
          "authorized"
        ],
        "security": [
          {
            "UserAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got the players board.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 401,
                  "description": "Not authenticated."
                }
              }
            }
          },
          "403": {
            "description": "Game has not started yet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 403,
                  "description": "Game has not started yet."
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Starts the game.",
        "tags": [
          "game",
          "authorized"
        ],
        "security": [
          {
            "UserAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Starting the game."
          },
          "401": {
            "description": "Not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 401,
                  "description": "Not authenticated."
                }
              }
            }
          },
          "403": {
            "description": "Game already started.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 403,
                  "description": "Game already started."
                }
              }
            }
          }
        }
      },
      "patch": {
        "description": "Update a field of a players board.",
        "tags": [
          "game",
          "authorized"
        ],
        "security": [
          {
            "UserAuth": []
          }
        ],
        "parameters": [
          {
            "name": "index",
            "description": "The index of the field to cross out",
            "in": "path",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 401,
                  "description": "Not authenticated."
                }
              }
            }
          }
        }
      }
    },
    "/game/bingo": {
      "get": {
        "description": "Get the players that have achieved a bingo.",
        "tags": [
          "game",
          "authorized"
        ],
        "security": [
          {
            "UserAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got the players with a bingo.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Player"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 401,
                  "description": "Not authenticated."
                }
              }
            }
          },
          "403": {
            "description": "Game has not started yet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 403,
                  "description": "Game has not started yet."
                }
              }
            }
          }
        }
      }
    },
    "/socket": {
      "get": {
        "description": "Get Information about the players in a room.",
        "tags": [
          "websocket",
          "authorized"
        ],
        "security": [
          {
            "UserAuth": []
          }
        ],
        "responses": {
          "101":{
            "description": "Switching protocols. See the Message type for protocol information."
          },
          "401": {
            "description": "Not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                },
                "example": {
                  "status": 401,
                  "description": "Not authenticated."
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "UserAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "GenericResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "bearer": {
            "type": "string"
          }
        }
      },
      "RoomSettings": {
        "type": "object",
        "properties": {
          "board_size": {
            "type": "integer"
          },
          "duration": {
            "type": "integer"
          },
          "starting_time": {
            "type": "string",
            "nullable": true
          },
          "generation_type": {
            "type": "string",
            "enum": [
              "EQ",
              "EQR",
              "R"
            ]
          },
          "list": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Player": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "is_host": {
            "type": "boolean"
          },
          "cosmetic": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Board": {
        "type": "object",
        "properties": {
          "position_seed": {
            "type": "string"
          },
          "field_seed": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer"
          },
          "value": {
            "type": "string"
          },
          "crossed_at": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Message": {
        "description": "This object is used inside the ws.",
        "type": "object",
        "properties": {
          "sequence": {
            "description": "If the sequence is out of sync, client must do a full refresh.",
            "type": "integer"
          },
          "source_player": {
            "type": "string",
            "nullable": true
          },
          "target_player": {
            "type": "string",
            "nullable": true
          },
          "event": {
            "type": "string",
            "enum": [
              "PLAYER_JOIN",
              "PLAYER_UPDATE",
              "PLAYER_LEAVE",
              "SETTINGS_UPDATE",
              "GAME_START",
              "GAME_UPDATE",
              "GAME_BINGO_UPDATE"
            ]
          }
        }
      }
    }
  },
  "security": [
    {},
    {
      "UserAuth": []
    }
  ]
}
